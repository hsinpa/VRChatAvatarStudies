//generated by uShaderTemplate
//https://github.com/hecomi/uShaderTemplate
//Unitychan Toon Shader ver.2.0
//v.2.0.7.5
//nobuyuki@unity3d.com
//https://github.com/unity3d-jp/UnityChanToonShaderVer2_Project
//(C)Unity Technologies Japan/UCL

//_ALPHAPREMULTIPLY_ON : Transparent
//_ALPHATEST_ON : Cutout

Shader "Hidden/YOYOGI_MORI/YMToon/Base/Front" {

    Properties {
        [Enum(OFF,0,FRONT,1,BACK,2)] _CullMode("Cull Mode", int) = 2  //OFF/FRONT/BACK
        [Toggle(_)] _Inverse_Clipping ("Inverse_Clipping", Float ) = 0
        _Clipping_Level ("Clipping_Level", Range(0, 1)) = 0
        _Tweak_transparency ("Tweak_transparency", Range(-1, 1)) = 0

        _MainTex ("BaseMap", 2D) = "white" {}
        _BaseColor ("BaseColor", Color) = (1,1,1,1)

        [Toggle(_)] _Is_LightColor_Base ("Is_LightColor_Base", Float ) = 1
        _1st_ShadeMap ("1st_ShadeMap", 2D) = "white" {}
        _1st_ShadeColor ("1st_ShadeColor", Color) = (1,1,1,1)
        [Toggle(_)]_Use_1stShadeMapAlpha_As_ShadowMask("Use 1stShadeMapAlpha As ShadowMask", Float ) = 0
        _Tweak_1stShadingGradeMapLevel("_Tweak_1stShadingGradeMapLevel", Range(-0.5, 0.5) ) = 0

        _2nd_ShadeColor ("2nd_ShadeColor", Color) = (1,1,1,1)

        _CombinedMask ("Combined Mask", 2D) = "white" {} //deprecated
        _BaseOptMap ("Base OptMap", 2D) = "white" {}

        [HideInInspector] [Toggle(_)] _Use_Normal ("Use Normal", Float ) = 0
        [Normal] _BumpMap("Normal Map", 2D) = "bump" {}
        _BumpScale ("Normal Scale", Range(0, 1)) = 1

        [Toggle(_)] _Is_NormalMapToBase ("Is_NormalMapToBase", Float ) = 1
        [HideInInspector] [Toggle(_)] _Set_SystemShadowsToBase ("Set_SystemShadowsToBase", Float ) = 1 // deprecated

        [HideInInspector] _Tweak_SystemShadowsLevel ("Tweak_SystemShadowsLevel", Range(-0.5, 0.5)) = 0 // deprecated
        _Tweak_ReceivedShadowsLevel ("Tweak_ReceivedShadowsLevel", Range(-1, 1)) = 1

        [HideInInspector] _BaseColor_Step ("BaseColor_Step", Range(0.01, 1)) = 0.5 // deprecated
        [HideInInspector] _BaseShade_Feather ("Base/Shade_Feather", Range(0.0001, 1)) = 0.0001 // deprecated
        [HideInInspector] _ShadeColor_Step ("ShadeColor_Step", Range(0.01, 1)) = 0 // deprecated
        [HideInInspector] _1st2nd_Shades_Feather ("1st/2nd_Shades_Feather", Range(0.0001, 1)) = 0.0001 // deprecated

        _1st_Shade_Step ("1st Shade_Step", Range(0, 1)) = 0.5
        _1st_Shade_Feather ("1st Shade Feather", Range(0, 1)) = 0
        _2nd_Shade_Step ("2nd Shade_Step", Range(0, 1)) = 0
        _2nd_Shade_Feather ("2nd_Shade Feather", Range(0, 1)) = 0

        [Toggle(_)] _Is_Filter_HiCutPointLightColor ("PointLights HiCut_Filter (ForwardAdd Only)", Float ) = 1

//v.2.0.4 HighColorMap
        [HideInInspector] [Toggle(_)] _Use_HighColor ("Use HighColor", Float ) = 1 // deprecated
        [HideInInspector] _HighColor ("HighColor", Color) = (0,0,0,1) // deprecated
        [HideInInspector] _HighColorMap ("HighColor Map", 2D) = "white" {} // deprecated
        [HideInInspector] _HighColorOptMap ("HighColor Opt Map", 2D) = "white" {} // deprecated
        [HideInInspector] _1st_HighColorOptMap ("1st HighColor Opt Map", 2D) = "white" {} // deprecated
        [HideInInspector] [Toggle(_)] _Use_2nd_HighColor_OptMap ("Use 2nd HighColor OptMap", Float ) = 1 // deprecated
        [HideInInspector] _2nd_HighColorOptMap ("2nd HighColor Opt Map", 2D) = "white" {} // deprecated
        [HideInInspector] [Toggle(_)] _Use_2ndUV_As_HighColorMapMask("Use 2nd UV As HighColorMap Mask", Float) = 1 // deprecated
        [HideInInspector] [Toggle(_)] _Is_LightColor_HighColor ("Is_LightColor_HighColor", Float ) = 1 // deprecated
        [HideInInspector]_HighColor_Power ("HighColor_Power", Range(-2, 2)) = -1 //deprecated // deprecated
        [HideInInspector] _1st_HighColor_Power ("1st HighColor_Power", Range(-2, 2)) = -1 // deprecated
        [HideInInspector] _2nd_HighColor_Power ("2nd HighColor_Power", Range(-2, 2)) = -1 // deprecated
        [HideInInspector] _Tweak_HighColor_Feather_Level ("HighColor Feather", Range(0.0001, 1)) = 1.0 // deprecated
        [HideInInspector] [Toggle(_)] _Is_SpecularToHighColor ("Is_SpecularToHighColor", Float ) = 0 // deprecated
        [HideInInspector] [Toggle(_)] _Is_BlendAddToHiColor ("Is_BlendAddToHiColor", Float ) = 0 // deprecated
        [HideInInspector] [Toggle(_)] _Is_UseTweakHighColorOnShadow ("Is_UseTweakHighColorOnShadow", Float ) = 0 // deprecated
        [HideInInspector] _TweakHighColorOnShadow ("TweakHighColorOnShadow", Range(0, 1)) = 0 // deprecated
        [HideInInspector]_HighColorMapMaskScaler ("HighColorMapMask Scaler", Range(-0.5, 0.5)) = 0 //deprecated // deprecated
        [HideInInspector]_HighColorMapMaskOffset ("HighColorMapMask Offset", Range(-0.5, 0.5)) = 0 //deprecated // deprecated
        [HideInInspector] _1st_HighColorMapMaskScaler ("1st HighColorMapMask Scaler", Range(-0.5, 0.5)) = 0 // deprecated
        [HideInInspector] _1st_HighColorMapMaskOffset ("1st HighColorMapMask Offset", Range(-0.5, 0.5)) = 0 // deprecated
        [HideInInspector] _2nd_HighColorMapMaskScaler ("2nd HighColorMapMask Scaler", Range(-0.5, 0.5)) = 0 // deprecated
        [HideInInspector] _2nd_HighColorMapMaskOffset ("2nd HighColorMapMask Offset", Range(-0.5, 0.5)) = 0 // deprecated

        [Toggle(_)] _Use_Specular ("Use Specular", Float ) = 1
        _Specular ("Specular", Color) = (0,0,0,1)
        _SpecularMap ("Specular Map", 2D) = "white" {}
        _SpecularOptMap ("Specular Opt Map", 2D) = "white" {}
        _1st_SpecularOptMap ("1st Specular Opt Map", 2D) = "white" {}
        [Toggle(_)] _Use_2nd_Specular_OptMap ("Use 2nd Specular OptMap", Float ) = 1
        _2nd_SpecularOptMap ("2nd Specular Opt Map", 2D) = "white" {}
        [Toggle(_)] _Use_2ndUV_As_SpecularMapMask("Use 2nd UV As SpecularMap Mask", Float) = 1

        [Toggle(_)] _Is_LightColor_Specular ("Is_LightColor_Specular", Float ) = 1

        [HideInInspector]_Specular_Power ("Specular_Power", Range(-2, 2)) = -1 //deprecated
        _1st_Specular_Power ("1st Specular_Power", Range(-2, 2)) = -1
        _2nd_Specular_Power ("2nd Specular_Power", Range(-2, 2)) = -1

        _Tweak_Specular_Feather_Level ("Specular Feather", Range(0, 1)) = 1.0
        [Toggle(_)] _Is_SpecularToSpecular ("Is_SpecularToSpecular", Float ) = 0
        [Toggle(_)] _Is_BlendAddToHiColor ("Is_BlendAddToHiColor", Float ) = 0 //deprecated
        [Toggle(_)] _Is_UseTweakSpecularOnShadow ("Is_UseTweakSpecularOnShadow", Float ) = 0
        _TweakSpecularOnShadow ("TweakSpecularOnShadow", Range(0, 1)) = 0

        [HideInInspector]_SpecularMapMaskScaler ("SpecularMapMask Scaler", Range(-0.5, 0.5)) = 0 // deprecated
        [HideInInspector]_SpecularMapMaskOffset ("SpecularMapMask Offset", Range(-0.5, 0.5)) = 0 // deprecated

        _1st_SpecularMapMaskScaler ("1st SpecularMapMask Scaler", Range(-0.5, 0.5)) = 0
        _1st_SpecularMapMaskOffset ("1st SpecularMapMask Offset", Range(-0.5, 0.5)) = 0

        _2nd_SpecularMapMaskScaler ("2nd SpecularMapMask Scaler", Range(-0.5, 0.5)) = 0
        _2nd_SpecularMapMaskOffset ("2nd SpecularMapMask Offset", Range(-0.5, 0.5)) = 0

//Rim Light
        [Toggle(_)] _RimLight ("RimLight", Float ) = 0
        [HideInInspector]_RimLightColor ("RimLightColor", Color) = (1,1,1,1) // deprecated
        _1st_RimLightColor ("1st RimLightColor", Color) = (1,1,1,1)
        _2nd_RimLightColor ("2nd RimLightColor", Color) = (1,1,1,1)

        [Toggle(_)] _Is_LightColor_RimLight ("Is_LightColor_RimLight", Float ) = 1

        [HideInInspector] _RimLight_Power ("RimLight_Power", Range(0, 1)) = 0.1
        _1st_RimLight_Power ("1st RimLight_Power", Range(0, 1)) = 0.1
        _2nd_RimLight_Power ("2nd RimLight_Power", Range(0, 1)) = 0.1

        [HideInInspector]_RimLight_InsideMask ("RimLight_InsideMask", Range(0.0001, 1)) = 0.0001 // deprecated
        _1st_RimLight_InsideMask ("1st RimLight_InsideMask", Range(0, 1)) = 0
        _2nd_RimLight_InsideMask ("2nd RimLight_InsideMask", Range(0, 1)) = 0

        [HideInInspector] _RimLight_FeatherOff ("RimLight_FeatherOff", Float ) = 0 //deprecated
        [Toggle(_)] _1st_RimLight_Feather ("1st RimLight_Feather", Float ) = 0
        [Toggle(_)] _2nd_RimLight_Feather ("2nd RimLight_Feather", Float ) = 0

        [Toggle(_)] _Is_1st_RimLight_Addtive ("Is_1st_RimLight_Addtive", Float ) = 1
        [Toggle(_)] _Is_2nd_RimLight_Addtive ("Is_2nd_RimLight_Addtive", Float ) = 1

        [Toggle(_)] _LightDirection_MaskOn ("LightDirection_MaskOn", Float ) = 0
        _Tweak_LightDirection_MaskLevel ("Tweak_LightDirection_MaskLevel", Range(0, 0.5)) = 0

        [Toggle(_)] _Add_Antipodean_RimLight ("Add_Antipodean_RimLight", Float ) = 0
        _Ap_RimLightColor ("Ap_RimLightColor", Color) = (1,1,1,1)
        [Toggle(_)] _Is_LightColor_Ap_RimLight ("Is_LightColor_Ap_RimLight", Float ) = 1
        _Ap_RimLight_Power ("Ap_RimLight_Power", Range(0, 1)) = 0.1
        [Toggle(_)] _Ap_RimLight_Feather ("Ap_RimLight_Feather", Float ) = 0
        [HideInInspector] _Tweak_RimLightMaskLevel ("Tweak_RimLightMaskLevel", Range(-1, 1)) = 0 // deprecated
        _Tweak_1st_RimLightMaskLevel ("Tweak 1st RimLightMaskLevel", Range(-1, 1)) = 0
        _Tweak_2nd_RimLightMaskLevel ("Tweak 2nd RimLightMaskLevel", Range(-1, 1)) = 0

//Mat cap
        [Toggle(_)] _MatCap ("MatCap", Float ) = 0
        _MatCap_Sampler ("MatCap_Sampler", 2D) = "black" {}
        //v.2.0.6
        _BlurLevelMatCap ("Blur Level of MatCap_Sampler", Range(0, 10)) = 0
        _MatCapColor ("MatCapColor", Color) = (1,1,1,1)
        [Toggle(_)] _Is_LightColor_MatCap ("Is_LightColor_MatCap", Float ) = 1

        _TweakMatCapOnShadow ("TweakMatCapOnShadow", Range(0, 1)) = 0
//MatCapMask
        _Set_MatcapMask ("Set_MatcapMask", 2D) = "white" {} // deprecated
        _MatCapMask ("_MatCapMask", 2D) = "white" {}
        _Tweak_MatcapMaskLevel ("Tweak_MatcapMaskLevel", Range(-1, 1)) = 0 // deprecated
        _Tweak_MatCapMaskLevel ("Tweak_MatCapMaskLevel", Range(-1, 1)) = 0
        //v.2.0.5
        [Toggle(_)] _Is_Ortho ("Orthographic Projection for MatCap", Float ) = 0

//Emissive
        [Toggle(_)] _Use_Emissive ("Use Emissive", Float ) = 0
        [KeywordEnum(SIMPLE,ANIMATION)] _EMISSIVE("EMISSIVE MODE", Float) = 0
        _EmissionMap("Emission Map", 2D) = "white" {}
        [HDR]_Emissive_Color("Emissive Color", Color) = (0,0,0,1)

        _Base_Speed ("Base_Speed", Float ) = 0
        _Scroll_EmissiveU ("Scroll_EmissiveU", Range(-1, 1)) = 0
        _Scroll_EmissiveV ("Scroll_EmissiveV", Range(-1, 1)) = 0
        _Rotate_EmissiveUV ("Rotate_EmissiveUV", Float ) = 0
        [Toggle(_)] _Is_PingPong_Base ("Is_PingPong_Base", Float ) = 0
        [Toggle(_)] _Is_ColorShift ("Activate ColorShift", Float ) = 0
        [HDR]_ColorShift ("ColorSift", Color) = (0,0,0,1)
        _ColorShift_Speed ("ColorShift_Speed", Float ) = 0
        [Toggle(_)] _Is_ViewShift ("Activate ViewShift", Float ) = 0
        [HDR]_ViewShift ("ViewSift", Color) = (0,0,0,1)
        [Toggle(_)] _Is_ViewCoord_Scroll ("Is_ViewCoord_Scroll", Float ) = 0

//Outline
        [KeywordEnum(NML,POS)] _OUTLINE("OUTLINE MODE", Float) = 0
        _Outline_Width ("Outline_Width", Range(0, 2)) = 0
        _Farthest_Distance ("Farthest_Distance", Float ) = 100
        _Nearest_Distance ("Nearest_Distance", Float ) = 0.5
        _Outline_Color ("Outline_Color", Color) = (0.5,0.5,0.5,1)
        [Toggle(_)] _Is_BlendBaseColor ("Is_BlendBaseColor", Float ) = 0
        _Is_BlendBaseColorWeight ("Is_BlendBaseColorWeight", Range(0,1)) = 1
        [Toggle(_)] _Is_LightColor_Outline ("Is_LightColor_Outline", Float ) = 1
        [Toggle(_)] _Is_OutlineMap ("_Is_OutlineMap", Float ) = 0
        _OutlineMap ("Outline Map", 2D) = "white" {}
        //v.2.0.4.3 Baked Nrmal Texture for Outline
        [Toggle(_)] _Is_BakedNormal ("Is_BakedNormal", Float ) = 0
        _BakedNormal ("Baked Normal for Outline", 2D) = "white" {}
//other
        _Glossiness("Smoothness", Range(0.0, 1.0)) = 0.5
        _GlossMapScale("Smoothness Scale", Range(0.0, 1.0)) = 1.0
        [Enum(Metallic Alpha,0,Albedo Alpha,1)] _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0

        [Gamma] _Metallic("Metallic", Range(0.0, 1.0)) = 0.0
        _MetallicGlossMap("Metallic Map", 2D) = "white" {}

        [ToggleOff] _SpecularHighlights("Specular Highlights", Float) = 1.0
        [ToggleOff] _GlossyReflections("Glossy Reflections", Float) = 1.0

        [Toggle(_)] _Use_SSS ("Use SSS", Float ) = 0
        _HSVOffset ("HSV Offset", Vector) = (0,1,1,0)
        [HideInInspector] [Toggle(_)] _Is_Skin("Is Skin", float) = 0 // deprecated
        [Toggle(_)] _Use_As_Skin("Use As Skin", float) = 0
        _SkinSSSMulColor ("Skin SSS MulColor", Color) = (0.7,0,0,1)
        _FakeTransparentWeight("FakeTransparent Weight", Range(0, 1)) = 0.5

        [Toggle(_)] _Use_OwnDirLight("Is OwnDirLight", float) = 0
        _OwnDirectionalLightDir ("Own Directional Light Dir", Vector) = (0,0,0,0)
        _OwnDirectionalLightColor ("Own Directional Light Color", Color) = (1,1,1,1)

        // Blending state
        [HideInInspector] _Mode ("_Mode", Float) = 0.0
        [HideInInspector] _SrcBlend ("_SrcBlend", Float) = 1.0
        [HideInInspector] _DstBlend ("_DstBlend", Float) = 0.0
        [HideInInspector] _PreZWrite ("_PreZWrite", Float) = 0.0
        [HideInInspector] _ZWrite ("_ZWrite", Float) = 1.0
        [HideInInspector] _ZWrite4Forward ("_ZWrite4Forward", Float) = 1.0
        [HideInInspector] _ZWrite4Trans ("_ZWrite4Trans", Float) = 1.0

        [Toggle(_)] _Use_Aniso_HighLight("Use Aniso HighLight", float) = 0
        [HideInInspector] _AnisotropicHighLightPowerLow("spec power low", Range(0, 1000)) = 1 // deprecated
        [HideInInspector] _AnisotropicHighLightStrengthLow("Spec strength low", Range(0, 100)) = 0 // deprecated
        [HideInInspector] _AnisotropicHighLightPowerHigh("spec power high", Range(0, 1000)) = 1 // deprecated
        [HideInInspector] _AnisotropicHighLightStrengthHigh("Spec strength high", Range(0, 10)) = 0 // deprecated
        _1stAnisoHighLightPower("1st aniso highlight power", Range(0, 1000)) = 1
        _1stAnisoHighLightStrength("1st aniso highlight strength", Range(0, 100)) = 0
        _2ndAnisoHighLightPower("2nd aniso highlight power", Range(0, 1000)) = 1
        _2ndAnisoHighLightStrength("2nd aniso highlight strength", Range(0, 10)) = 0
        [HideInInspector] _ShiftTangent("Shift Tangent", Range(-10, 10)) = 0 //deprecated
        _1st_ShiftTangent("Low Shift Tangent", Range(-10, 10)) = 0
        _2nd_ShiftTangent("High Shift Tangent", Range(-10, 10)) = 0

        [HideInInspector] _EulerAnglesCache ("_EulerAnglesCache", Vector) = (150,30,0,0)
        [HideInInspector] _LightIntensityCache ("_LightIntensityCache", Float) = 1.0
        [HideInInspector] _LightColorChache ("_LightColorChache", Color) = (1,1,1,1)

    }

    SubShader
    {
        Tags { "RenderType"="Opaque" }

        UsePass "YOYOGI_MORI/YMToon/Base/Outline_Base"
        UsePass "YOYOGI_MORI/YMToon/Base/Outline_Add"
        UsePass "YOYOGI_MORI/YMToon/Base/ForTransparentZWrite"

        Pass
        {
            Name "Forward_Front"
            Tags {
                "LightMode" = "Always"
            }

            Cull Front
            Blend [_SrcBlend] [_DstBlend]
            ZWrite [_ZWrite4Forward]

            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag

            #include "UnityCG.cginc"
            #include "AutoLight.cginc"
            #include "Lighting.cginc"

            #pragma multi_compile_fwdbase_fullshadows
            #pragma multi_compile _IS_PASS_FWDBASE
            #pragma target 3.0
            #pragma multi_compile_instancing
            #pragma fragmentoption ARB_precision_hint_fastest
            #pragma shader_feature _ _ALPHAPREMULTIPLY_ON _ALPHATEST_ON

            #pragma shader_feature _DEBUG_BASE_COLOR_ONLY
            #pragma shader_feature _DEBUG_BASE_MAP_ALPHA
            #pragma shader_feature _DEBUG_1ST_SHADEMASK
            #pragma shader_feature _DEBUG_2ND_SHADEMASK
            #pragma shader_feature _DEBUG_ORIGINAL_NORMAL
            #pragma shader_feature _DEBUG_MAPPED_NORMAL
            #pragma shader_feature _DEBUG_1ST_SHADING_GRADEMASK
            #pragma shader_feature _DEBUG_SPECULAR_UVSET
            #pragma shader_feature _DEBUG_SPECULAR_1ST_OPT_R
            #pragma shader_feature _DEBUG_SPECULAR_1ST_OPT_G
            #pragma shader_feature _DEBUG_SPECULAR_1ST_OPT_B
            #pragma shader_feature _DEBUG_SPECULAR_1ST_OPT_A
            #pragma shader_feature _DEBUG_SPECULAR_2ND_OPT_R
            #pragma shader_feature _DEBUG_SPECULAR_2ND_OPT_G
            #pragma shader_feature _DEBUG_SPECULAR_2ND_OPT_B
            #pragma shader_feature _DEBUG_SPECULAR_2ND_OPT_A
            #pragma shader_feature _DEBUG_SPECULAR_MASK
            #pragma shader_feature _DEBUG_SPECULAR
            #pragma shader_feature _DEBUG_RIM_LIGHT
            #pragma shader_feature _DEBUG_IS_MIRROR
            #pragma shader_feature _DEBUG_MATCAP_SAMPLER
            #pragma shader_feature _DEBUG_MATCAP_MASK
            #pragma shader_feature _DEBUG_MATCAP
            #pragma shader_feature _DEBUG_EMISSIVE
            #pragma shader_feature _DEBUG_SSS_SHIFTED
            #pragma shader_feature _DEBUG_SSS_SHIFTED_W_MASK

            #include "Cgincs/YMT_ForwardFrontBase.cginc"

            ENDCG
        }

        UsePass "YOYOGI_MORI/YMToon/Base/Forward_Add"
        UsePass "YOYOGI_MORI/YMToon/Base/ShadowCaster"
        // UsePass "YOYOGI_MORI/YMToon/Base/META"





    }

    CustomEditor "YoyogiMori.YMToon2GUI"

}
